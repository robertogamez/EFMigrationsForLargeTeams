//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cintera.DAL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Scripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Scripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cintera.DAL.Scripts", typeof(Scripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE #CountyByState (
        ///	[Country] [nvarchar](255) NOT NULL,
        ///	[State] [nvarchar](255) NULL,
        ///	[County] [nvarchar](255) NULL
        ///)
        ///
        ///INSERT #CountyByState (Country, State, County) VALUES
        ///   (N&apos;United States of America&apos;, N&apos;Alabama&apos;, N&apos;Butler County&apos;)
        ///  ,(N&apos;United States of America&apos;, N&apos;Alabama&apos;, N&apos;Calhoun County&apos;)
        ///  ,(N&apos;United States of America&apos;, N&apos;Alabama&apos;, N&apos;Chambers County&apos;)
        ///  ,(N&apos;United States of America&apos;, N&apos;Alabama&apos;, N&apos;Cherokee County&apos;)
        ///  ,(N&apos;United States of America&apos;, N&apos;Alabama&apos;, N&apos;Chilton Cou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CountryByState {
            get {
                return ResourceManager.GetString("CountryByState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET IDENTITY_INSERT Region ON
        ///
        ///INSERT INTO Region
        ///  (RegionId, ParentId, Name, Discriminator)
        ///SELECT RegionId, ParentId, Name, Discriminator
        ///FROM InvalidParentName
        ///
        ///SET IDENTITY_INSERT Region OFF
        ///
        ///DROP TABLE InvalidParentName
        ///.
        /// </summary>
        internal static string DuplicateRegions_Down {
            get {
                return ResourceManager.GetString("DuplicateRegions_Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT r.RegionId, r.ParentId, r.Name, r.Discriminator
        ///INTO InvalidParentName
        ///FROM Region r
        ///JOIN (
        ///  SELECT ParentId, Name
        ///  FROM Region
        ///  GROUP BY ParentId, Name
        ///  HAVING COUNT(*) &gt; 1) bad
        ///ON  r.ParentId = bad.ParentId
        ///AND r.Name = bad.Name
        ///
        ///DELETE r
        ///FROM Region r
        ///JOIN (
        ///  SELECT ParentId, Name
        ///  FROM Region
        ///  GROUP BY ParentId, Name
        ///  HAVING COUNT(*) &gt; 1) bad
        ///ON  r.ParentId = bad.ParentId
        ///AND r.Name = bad.Name
        ///.
        /// </summary>
        internal static string DuplicateRegions_Up {
            get {
                return ResourceManager.GetString("DuplicateRegions_Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Region
        ///SELECT DISTINCT NULL AS ParentId, Country AS Name, &apos;Country&apos; AS Discriminator
        ///FROM #CountyByState
        ///
        ///INSERT INTO Region
        ///SELECT DISTINCT RegionId AS ParentId, State AS Name, &apos;State&apos; AS Discriminator
        ///FROM #CountyByState
        ///JOIN Region ON Name = Country
        ///  AND Discriminator = &apos;Country&apos;
        ///
        ///INSERT INTO Region
        ///SELECT DISTINCT RegionId AS ParentId, County AS Name, &apos;County&apos; AS Discriminator
        ///FROM #CountyByState
        ///JOIN Region ON Name = State
        ///  AND Discriminator = &apos;State&apos;
        ///.
        /// </summary>
        internal static string InsertRegions {
            get {
                return ResourceManager.GetString("InsertRegions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create view V_AncestorRegion
        ///as
        ///with r as (
        ///  select RegionId, RegionId as AncestorRegionId, ParentId
        ///  from Region
        ///
        ///  union all
        ///
        ///  select r.RegionId, p.RegionId as AncestorRegionId, p.ParentId
        ///  from r join Region p on r.ParentId = p.RegionId
        ///)
        ///select RegionId, AncestorRegionId
        ///from r
        ///.
        /// </summary>
        internal static string V_AncestorRegion {
            get {
                return ResourceManager.GetString("V_AncestorRegion", resourceCulture);
            }
        }
    }
}
